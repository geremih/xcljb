;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns
 xcljb.gen.composite
 (:require xcljb.conn-ext xcljb.gen.composite-types))

(def
 -XCLJB
 {:minor-version 3,
  :major-version 0,
  :header "composite",
  :extension-multiword false,
  :extension-name "Composite",
  :extension-xname "Composite"})

(def REDIRECT {:manual 1, :automatic 0})

(clojure.core/defn
 query-version
 [conn client-major-version client-minor-version]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:client-major-version :client-minor-version]
    [client-major-version client-minor-version])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/QueryVersionRequest
   request)))

(clojure.core/defn
 redirect-window
 [conn window update]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :update] [window update])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/RedirectWindowRequest
   request)))

(clojure.core/defn
 redirect-subwindows
 [conn window update]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :update] [window update])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/RedirectSubwindowsRequest
   request)))

(clojure.core/defn
 unredirect-window
 [conn window update]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :update] [window update])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/UnredirectWindowRequest
   request)))

(clojure.core/defn
 unredirect-subwindows
 [conn window update]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :update] [window update])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/UnredirectSubwindowsRequest
   request)))

(clojure.core/defn
 create-region-from-border-clip
 [conn region window]
 (clojure.core/let
  [request (clojure.core/zipmap [:region :window] [region window])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/CreateRegionFromBorderClipRequest
   request)))

(clojure.core/defn
 name-window-pixmap
 [conn window pixmap]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :pixmap] [window pixmap])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/NameWindowPixmapRequest
   request)))

(clojure.core/defn
 get-overlay-window
 [conn window]
 (clojure.core/let
  [request (clojure.core/zipmap [:window] [window])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/GetOverlayWindowRequest
   request)))

(clojure.core/defn
 release-overlay-window
 [conn window]
 (clojure.core/let
  [request (clojure.core/zipmap [:window] [window])]
  (xcljb.conn-ext/send
   conn
   "Composite"
   xcljb.gen.composite-types/ReleaseOverlayWindowRequest
   request)))

;;; Manually written.
