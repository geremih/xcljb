;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns
 xcljb.gen.damage
 (:require xcljb.conn-ext xcljb.gen.damage-types))

(def
 -XCLJB
 {:minor-version 1,
  :major-version 1,
  :header "damage",
  :extension-multiword false,
  :extension-name "Damage",
  :extension-xname "DAMAGE"})

(def
 REPORT-LEVEL
 {:non-empty 3,
  :bounding-box 2,
  :delta-rectangles 1,
  :raw-rectangles 0})

(clojure.core/defn
 query-version
 [conn client-major-version client-minor-version]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:client-major-version :client-minor-version]
    [client-major-version client-minor-version])]
  (xcljb.conn-ext/send
   conn
   "DAMAGE"
   xcljb.gen.damage-types/QueryVersionRequest
   request)))

(clojure.core/defn
 create
 [conn damage drawable level]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:damage :drawable :level]
    [damage drawable level])]
  (xcljb.conn-ext/send
   conn
   "DAMAGE"
   xcljb.gen.damage-types/CreateRequest
   request)))

(clojure.core/defn
 destroy
 [conn damage]
 (clojure.core/let
  [request (clojure.core/zipmap [:damage] [damage])]
  (xcljb.conn-ext/send
   conn
   "DAMAGE"
   xcljb.gen.damage-types/DestroyRequest
   request)))

(clojure.core/defn
 subtract
 [conn damage repair parts]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:damage :repair :parts]
    [damage repair parts])]
  (xcljb.conn-ext/send
   conn
   "DAMAGE"
   xcljb.gen.damage-types/SubtractRequest
   request)))

(clojure.core/defn
 add
 [conn drawable region]
 (clojure.core/let
  [request (clojure.core/zipmap [:drawable :region] [drawable region])]
  (xcljb.conn-ext/send
   conn
   "DAMAGE"
   xcljb.gen.damage-types/AddRequest
   request)))

;;; Manually written.
