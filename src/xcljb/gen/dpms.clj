;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns
 xcljb.gen.dpms
 (:require xcljb.conn-ext xcljb.gen.dpms-types))

(def
 -XCLJB
 {:minor-version 0,
  :major-version 0,
  :header "dpms",
  :extension-multiword false,
  :extension-name "DPMS",
  :extension-xname "DPMS"})

(def DPMSMODE {:off 3, :suspend 2, :standby 1, :on 0})

(clojure.core/defn
 get-version
 [conn client-major-version client-minor-version]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:client-major-version :client-minor-version]
    [client-major-version client-minor-version])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/GetVersionRequest
   request)))

(clojure.core/defn
 capable
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/CapableRequest
   request)))

(clojure.core/defn
 get-timeouts
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/GetTimeoutsRequest
   request)))

(clojure.core/defn
 set-timeouts
 [conn standby-timeout suspend-timeout off-timeout]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:standby-timeout :suspend-timeout :off-timeout]
    [standby-timeout suspend-timeout off-timeout])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/SetTimeoutsRequest
   request)))

(clojure.core/defn
 enable
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/EnableRequest
   request)))

(clojure.core/defn
 disable
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/DisableRequest
   request)))

(clojure.core/defn
 force-level
 [conn power-level]
 (clojure.core/let
  [request (clojure.core/zipmap [:power-level] [power-level])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/ForceLevelRequest
   request)))

(clojure.core/defn
 info
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "DPMS"
   xcljb.gen.dpms-types/InfoRequest
   request)))

;;; Manually written.
