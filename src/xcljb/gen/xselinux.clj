;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns
 xcljb.gen.xselinux
 (:require xcljb.conn-ext xcljb.gen.xselinux-types))

(def
 -XCLJB
 {:minor-version 0,
  :major-version 1,
  :header "xselinux",
  :extension-multiword false,
  :extension-name "SELinux",
  :extension-xname "SELinux"})

(clojure.core/defn
 query-version
 [conn client-major client-minor]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:client-major :client-minor]
    [client-major client-minor])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/QueryVersionRequest
   request)))

(clojure.core/defn
 set-device-create-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetDeviceCreateContextRequest
   request)))

(clojure.core/defn
 get-device-create-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetDeviceCreateContextRequest
   request)))

(clojure.core/defn
 set-device-context
 [conn device context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap
    [:device :context-len :context]
    [device context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetDeviceContextRequest
   request)))

(clojure.core/defn
 get-device-context
 [conn device]
 (clojure.core/let
  [request (clojure.core/zipmap [:device] [device])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetDeviceContextRequest
   request)))

(clojure.core/defn
 set-window-create-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetWindowCreateContextRequest
   request)))

(clojure.core/defn
 get-window-create-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetWindowCreateContextRequest
   request)))

(clojure.core/defn
 get-window-context
 [conn window]
 (clojure.core/let
  [request (clojure.core/zipmap [:window] [window])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetWindowContextRequest
   request)))

(clojure.core/defn
 set-property-create-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetPropertyCreateContextRequest
   request)))

(clojure.core/defn
 get-property-create-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetPropertyCreateContextRequest
   request)))

(clojure.core/defn
 set-property-use-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetPropertyUseContextRequest
   request)))

(clojure.core/defn
 get-property-use-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetPropertyUseContextRequest
   request)))

(clojure.core/defn
 get-property-context
 [conn window property]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :property] [window property])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetPropertyContextRequest
   request)))

(clojure.core/defn
 get-property-data-context
 [conn window property]
 (clojure.core/let
  [request (clojure.core/zipmap [:window :property] [window property])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetPropertyDataContextRequest
   request)))

(clojure.core/defn
 list-properties
 [conn window]
 (clojure.core/let
  [request (clojure.core/zipmap [:window] [window])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/ListPropertiesRequest
   request)))

(clojure.core/defn
 set-selection-create-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetSelectionCreateContextRequest
   request)))

(clojure.core/defn
 get-selection-create-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetSelectionCreateContextRequest
   request)))

(clojure.core/defn
 set-selection-use-context
 [conn context-len context]
 (clojure.core/let
  [request
   (clojure.core/zipmap [:context-len :context] [context-len context])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/SetSelectionUseContextRequest
   request)))

(clojure.core/defn
 get-selection-use-context
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetSelectionUseContextRequest
   request)))

(clojure.core/defn
 get-selection-context
 [conn selection]
 (clojure.core/let
  [request (clojure.core/zipmap [:selection] [selection])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetSelectionContextRequest
   request)))

(clojure.core/defn
 get-selection-data-context
 [conn selection]
 (clojure.core/let
  [request (clojure.core/zipmap [:selection] [selection])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetSelectionDataContextRequest
   request)))

(clojure.core/defn
 list-selections
 [conn]
 (clojure.core/let
  [request (clojure.core/zipmap [] [])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/ListSelectionsRequest
   request)))

(clojure.core/defn
 get-client-context
 [conn resource]
 (clojure.core/let
  [request (clojure.core/zipmap [:resource] [resource])]
  (xcljb.conn-ext/send
   conn
   "SELinux"
   xcljb.gen.xselinux-types/GetClientContextRequest
   request)))

;;; Manually written.
