;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns
 xcljb.gen.randr-internal
 (:require [xcljb common gen-common] [xcljb.gen randr-types]))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 0]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/QueryVersionReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 2]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/SetScreenConfigReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 5]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetScreenInfoReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 6]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetScreenSizeRangeReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 8]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetScreenResourcesReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 9]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetOutputInfoReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 10]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/ListOutputPropertiesReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 11]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/QueryOutputPropertyReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 15]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetOutputPropertyReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 16]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/CreateModeReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 20]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetCrtcInfoReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 21]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/SetCrtcConfigReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 22]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetCrtcGammaSizeReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 23]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetCrtcGammaReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 25]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetScreenResourcesCurrentReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 27]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetCrtcTransformReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 28]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetPanningReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 29]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/SetPanningReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-reply
 ["RANDR" 31]
 [_ _ reply-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/GetOutputPrimaryReply
  reply-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-event
 ["RANDR" 0]
 [_ _ event-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/ScreenChangeNotifyEvent
  event-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-error
 ["RANDR" 0]
 [_ _ error-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/BadOutputError
  error-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-error
 ["RANDR" 1]
 [_ _ error-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/BadCrtcError
  error-buf
  nil))

(clojure.core/defmethod
 xcljb.common/read-error
 ["RANDR" 2]
 [_ _ error-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/BadModeError
  error-buf
  nil))

;;; Manually written.

(clojure.core/defmethod
 xcljb.common/read-event
 ["RANDR" 1]
 [_ _ event-buf]
 (xcljb.gen-common/deserialize
  xcljb.gen.randr-types/NotifyEvent
  event-buf
  nil))
