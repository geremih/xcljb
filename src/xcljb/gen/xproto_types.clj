;;;; This file is automatically generated. DO NOT MODIFY.

(clojure.core/ns xcljb.gen.xproto-types (:require [xcljb gen-common] ))

(def BYTE (xcljb.gen-common/->Primitive :ubyte))

(def INT8 (xcljb.gen-common/->Primitive :byte))

(def INT16 (xcljb.gen-common/->Primitive :int16))

(def INT32 (xcljb.gen-common/->Primitive :int32))

(def CARD8 (xcljb.gen-common/->Primitive :ubyte))

(def CARD16 (xcljb.gen-common/->Primitive :uint16))

(def CARD32 (xcljb.gen-common/->Primitive :uint32))

(def char (xcljb.gen-common/->Primitive :ubyte))

(def void (xcljb.gen-common/->Primitive :ubyte))

(def float (xcljb.gen-common/->Primitive :float32))

(def double (xcljb.gen-common/->Primitive :float64))

(def
 CHAR2B
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "byte1" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "byte2" xcljb.gen.xproto-types/CARD8)]))

(def WINDOW (xcljb.gen-common/->Primitive :uint32))

(def PIXMAP (xcljb.gen-common/->Primitive :uint32))

(def CURSOR (xcljb.gen-common/->Primitive :uint32))

(def FONT (xcljb.gen-common/->Primitive :uint32))

(def GCONTEXT (xcljb.gen-common/->Primitive :uint32))

(def COLORMAP (xcljb.gen-common/->Primitive :uint32))

(def ATOM (xcljb.gen-common/->Primitive :uint32))

(def DRAWABLE (xcljb.gen-common/->Primitive :uint32))

(def FONTABLE (xcljb.gen-common/->Primitive :uint32))

(def VISUALID xcljb.gen.xproto-types/CARD32)

(def TIMESTAMP xcljb.gen.xproto-types/CARD32)

(def KEYSYM xcljb.gen.xproto-types/CARD32)

(def KEYCODE xcljb.gen.xproto-types/CARD8)

(def BUTTON xcljb.gen.xproto-types/CARD8)

(def
 POINT
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)]))

(def
 RECTANGLE
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 ARC
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "angle1" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "angle2" xcljb.gen.xproto-types/INT16)]))

(def
 FORMAT
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bits-per-pixel"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "scanline-pad"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 5)]))

(def
 VISUALTYPE
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field
    "visual-id"
    xcljb.gen.xproto-types/VISUALID)
   (xcljb.gen-common/->Field "class" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bits-per-rgb-value"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "colormap-entries"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "red-mask" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "green-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "blue-mask" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Pad 4)]))

(def
 DEPTH
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "visuals-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->List
    "visuals"
    xcljb.gen.xproto-types/VISUALTYPE
    (xcljb.gen-common/->Fieldref "visuals-len"))]))

(def
 SCREEN
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "default-colormap"
    xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field
    "white-pixel"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "black-pixel"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "current-input-masks"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "width-in-pixels"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "height-in-pixels"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "width-in-millimeters"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "height-in-millimeters"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "min-installed-maps"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "max-installed-maps"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "root-visual"
    xcljb.gen.xproto-types/VISUALID)
   (xcljb.gen-common/->Field
    "backing-stores"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->BoolField "save-unders" 1)
   (xcljb.gen-common/->Field "root-depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "allowed-depths-len"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->List
    "allowed-depths"
    xcljb.gen.xproto-types/DEPTH
    (xcljb.gen-common/->Fieldref "allowed-depths-len"))]))

(def
 SetupRequest
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "byte-order" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "protocol-major-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "protocol-minor-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "authorization-protocol-name-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "authorization-protocol-data-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "authorization-protocol-name"
    (xcljb.gen-common/->Fieldref "authorization-protocol-name-len"))
   (xcljb.gen-common/->StringField
    "authorization-protocol-data"
    (xcljb.gen-common/->Fieldref "authorization-protocol-data-len"))]))

(def
 SetupFailed
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "reason-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "protocol-major-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "protocol-minor-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "length" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->StringField
    "reason"
    (xcljb.gen-common/->Fieldref "reason-len"))]))

(def
 SetupAuthenticate
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 5)
   (xcljb.gen-common/->Field "length" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->StringField
    "reason"
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "length")
     (xcljb.gen-common/->Value 4)))]))

(def
 Setup
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "protocol-major-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "protocol-minor-version"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "length" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "release-number"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "resource-id-base"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "resource-id-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "motion-buffer-size"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "vendor-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "maximum-request-length"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "roots-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "pixmap-formats-len"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "image-byte-order"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bitmap-format-bit-order"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bitmap-format-scanline-unit"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bitmap-format-scanline-pad"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "min-keycode"
    xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field
    "max-keycode"
    xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->StringField
    "vendor"
    (xcljb.gen-common/->Fieldref "vendor-len"))
   (xcljb.gen-common/->List
    "pixmap-formats"
    xcljb.gen.xproto-types/FORMAT
    (xcljb.gen-common/->Fieldref "pixmap-formats-len"))
   (xcljb.gen-common/->List
    "roots"
    xcljb.gen.xproto-types/SCREEN
    (xcljb.gen-common/->Fieldref "roots-len"))]))

(def
 TIMECOORD
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)]))

(def
 FONTPROP
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "name" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "value" xcljb.gen.xproto-types/CARD32)]))

(def
 CHARINFO
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field
    "left-side-bearing"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "right-side-bearing"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "character-width"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "ascent" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "descent" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "attributes"
    xcljb.gen.xproto-types/CARD16)]))

(def
 STR
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 SEGMENT
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "x1" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y1" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "x2" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y2" xcljb.gen.xproto-types/INT16)]))

(def
 COLORITEM
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "pixel" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "green" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "flags" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 1)]))

(def
 RGB
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "green" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 HOST
 (xcljb.gen-common/->Struct
  [(xcljb.gen-common/->Field "family" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "address-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->List
    "address"
    xcljb.gen.xproto-types/BYTE
    (xcljb.gen-common/->Fieldref "address-len"))]))

(def
 CreateWindowRequest
 (xcljb.gen-common/->Request
  nil
  1
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "wid" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "border-width"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "class" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "visual" xcljb.gen.xproto-types/VISUALID)
   (xcljb.gen-common/->Valueparam
    "value"
    xcljb.gen.xproto-types/CARD32)]))

(def
 ChangeWindowAttributesRequest
 (xcljb.gen-common/->Request
  nil
  2
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Valueparam
    "value"
    xcljb.gen.xproto-types/CARD32)]))

(def
 GetWindowAttributesRequest
 (xcljb.gen-common/->Request
  nil
  3
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 DestroyWindowRequest
 (xcljb.gen-common/->Request
  nil
  4
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 DestroySubwindowsRequest
 (xcljb.gen-common/->Request
  nil
  5
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 ChangeSaveSetRequest
 (xcljb.gen-common/->Request
  nil
  6
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 ReparentWindowRequest
 (xcljb.gen-common/->Request
  nil
  7
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)]))

(def
 MapWindowRequest
 (xcljb.gen-common/->Request
  nil
  8
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 MapSubwindowsRequest
 (xcljb.gen-common/->Request
  nil
  9
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 UnmapWindowRequest
 (xcljb.gen-common/->Request
  nil
  10
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 UnmapSubwindowsRequest
 (xcljb.gen-common/->Request
  nil
  11
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 CirculateWindowRequest
 (xcljb.gen-common/->Request
  nil
  13
  [(xcljb.gen-common/->Field "direction" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 GetGeometryRequest
 (xcljb.gen-common/->Request
  nil
  14
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)]))

(def
 QueryTreeRequest
 (xcljb.gen-common/->Request
  nil
  15
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 InternAtomRequest
 (xcljb.gen-common/->Request
  nil
  16
  [(xcljb.gen-common/->BoolField "only-if-exists" 1)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 GetAtomNameRequest
 (xcljb.gen-common/->Request
  nil
  17
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "atom" xcljb.gen.xproto-types/ATOM)]))

(def
 ChangePropertyRequest
 (xcljb.gen-common/->Request
  nil
  18
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "type" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "format" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 3)
   (xcljb.gen-common/->Field "data-len" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->List
    "data"
    xcljb.gen.xproto-types/void
    (xcljb.gen-common/->Op
     clojure.core//
     (xcljb.gen-common/->Op
      clojure.core/*
      (xcljb.gen-common/->Fieldref "data-len")
      (xcljb.gen-common/->Fieldref "format"))
     (xcljb.gen-common/->Value 8)))]))

(def
 DeletePropertyRequest
 (xcljb.gen-common/->Request
  nil
  19
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)]))

(def
 GetPropertyRequest
 (xcljb.gen-common/->Request
  nil
  20
  [(xcljb.gen-common/->BoolField "delete" 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "type" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field
    "long-offset"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "long-length"
    xcljb.gen.xproto-types/CARD32)]))

(def
 ListPropertiesRequest
 (xcljb.gen-common/->Request
  nil
  21
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 SetSelectionOwnerRequest
 (xcljb.gen-common/->Request
  nil
  22
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "owner" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 GetSelectionOwnerRequest
 (xcljb.gen-common/->Request
  nil
  23
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)]))

(def
 ConvertSelectionRequest
 (xcljb.gen-common/->Request
  nil
  24
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "requestor" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "target" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 SendEventRequest
 (xcljb.gen-common/->Request
  nil
  25
  [(xcljb.gen-common/->BoolField "propagate" 1)
   (xcljb.gen-common/->Field
    "destination"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "event-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->StringField
    "event"
    (xcljb.gen-common/->Value 32))]))

(def
 GrabPointerRequest
 (xcljb.gen-common/->Request
  nil
  26
  [(xcljb.gen-common/->BoolField "owner-events" 1)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "event-mask"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "pointer-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "keyboard-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "confine-to"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "cursor" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 UngrabPointerRequest
 (xcljb.gen-common/->Request
  nil
  27
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 GrabButtonRequest
 (xcljb.gen-common/->Request
  nil
  28
  [(xcljb.gen-common/->BoolField "owner-events" 1)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "event-mask"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "pointer-mode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "keyboard-mode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "confine-to"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "cursor" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "button" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "modifiers"
    xcljb.gen.xproto-types/CARD16)]))

(def
 UngrabButtonRequest
 (xcljb.gen-common/->Request
  nil
  29
  [(xcljb.gen-common/->Field "button" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "modifiers" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 ChangeActivePointerGrabRequest
 (xcljb.gen-common/->Request
  nil
  30
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cursor" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field
    "event-mask"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 GrabKeyboardRequest
 (xcljb.gen-common/->Request
  nil
  31
  [(xcljb.gen-common/->BoolField "owner-events" 1)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field
    "pointer-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "keyboard-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 2)]))

(def
 UngrabKeyboardRequest
 (xcljb.gen-common/->Request
  nil
  32
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 GrabKeyRequest
 (xcljb.gen-common/->Request
  nil
  33
  [(xcljb.gen-common/->BoolField "owner-events" 1)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "modifiers" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "key" xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field
    "pointer-mode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "keyboard-mode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 3)]))

(def
 UngrabKeyRequest
 (xcljb.gen-common/->Request
  nil
  34
  [(xcljb.gen-common/->Field "key" xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field
    "grab-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "modifiers" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 AllowEventsRequest
 (xcljb.gen-common/->Request
  nil
  35
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def GrabServerRequest (xcljb.gen-common/->Request nil 36 []))

(def UngrabServerRequest (xcljb.gen-common/->Request nil 37 []))

(def
 QueryPointerRequest
 (xcljb.gen-common/->Request
  nil
  38
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 GetMotionEventsRequest
 (xcljb.gen-common/->Request
  nil
  39
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "start" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "stop" xcljb.gen.xproto-types/TIMESTAMP)]))

(def
 TranslateCoordinatesRequest
 (xcljb.gen-common/->Request
  nil
  40
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "src-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "dst-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "src-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "src-y" xcljb.gen.xproto-types/INT16)]))

(def
 WarpPointerRequest
 (xcljb.gen-common/->Request
  nil
  41
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "src-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "dst-window"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "src-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "src-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "src-width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "src-height"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "dst-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-y" xcljb.gen.xproto-types/INT16)]))

(def
 SetInputFocusRequest
 (xcljb.gen-common/->Request
  nil
  42
  [(xcljb.gen-common/->Field "revert-to" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "focus" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)]))

(def GetInputFocusRequest (xcljb.gen-common/->Request nil 43 []))

(def QueryKeymapRequest (xcljb.gen-common/->Request nil 44 []))

(def
 OpenFontRequest
 (xcljb.gen-common/->Request
  nil
  45
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "fid" xcljb.gen.xproto-types/FONT)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 CloseFontRequest
 (xcljb.gen-common/->Request
  nil
  46
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "font" xcljb.gen.xproto-types/FONT)]))

(def
 QueryFontRequest
 (xcljb.gen-common/->Request
  nil
  47
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "font" xcljb.gen.xproto-types/FONTABLE)]))

(def
 ListFontsRequest
 (xcljb.gen-common/->Request
  nil
  49
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "max-names" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "pattern-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->StringField
    "pattern"
    (xcljb.gen-common/->Fieldref "pattern-len"))]))

(def
 ListFontsWithInfoRequest
 (xcljb.gen-common/->Request
  nil
  50
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "max-names" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "pattern-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->StringField
    "pattern"
    (xcljb.gen-common/->Fieldref "pattern-len"))]))

(def
 SetFontPathRequest
 (xcljb.gen-common/->Request
  nil
  51
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "font-qty" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->List
    "font"
    xcljb.gen.xproto-types/STR
    (xcljb.gen-common/->Fieldref "font-qty"))]))

(def GetFontPathRequest (xcljb.gen-common/->Request nil 52 []))

(def
 CreatePixmapRequest
 (xcljb.gen-common/->Request
  nil
  53
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "pid" xcljb.gen.xproto-types/PIXMAP)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 FreePixmapRequest
 (xcljb.gen-common/->Request
  nil
  54
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "pixmap" xcljb.gen.xproto-types/PIXMAP)]))

(def
 CreateGCRequest
 (xcljb.gen-common/->Request
  nil
  55
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cid" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Valueparam
    "value"
    xcljb.gen.xproto-types/CARD32)]))

(def
 ChangeGCRequest
 (xcljb.gen-common/->Request
  nil
  56
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Valueparam
    "value"
    xcljb.gen.xproto-types/CARD32)]))

(def
 CopyGCRequest
 (xcljb.gen-common/->Request
  nil
  57
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "src-gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "dst-gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field
    "value-mask"
    xcljb.gen.xproto-types/CARD32)]))

(def
 SetDashesRequest
 (xcljb.gen-common/->Request
  nil
  58
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field
    "dash-offset"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "dashes-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->List
    "dashes"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Fieldref "dashes-len"))]))

(def
 SetClipRectanglesRequest
 (xcljb.gen-common/->Request
  nil
  59
  [(xcljb.gen-common/->Field "ordering" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field
    "clip-x-origin"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "clip-y-origin"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->List
    "rectangles"
    xcljb.gen.xproto-types/RECTANGLE
    nil)]))

(def
 FreeGCRequest
 (xcljb.gen-common/->Request
  nil
  60
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)]))

(def
 ClearAreaRequest
 (xcljb.gen-common/->Request
  nil
  61
  [(xcljb.gen-common/->BoolField "exposures" 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 CopyAreaRequest
 (xcljb.gen-common/->Request
  nil
  62
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "src-drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field
    "dst-drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "src-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "src-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 CopyPlaneRequest
 (xcljb.gen-common/->Request
  nil
  63
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "src-drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field
    "dst-drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "src-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "src-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "bit-plane"
    xcljb.gen.xproto-types/CARD32)]))

(def
 PolyPointRequest
 (xcljb.gen-common/->Request
  nil
  64
  [(xcljb.gen-common/->Field
    "coordinate-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List
    "points"
    xcljb.gen.xproto-types/POINT
    nil)]))

(def
 PolyLineRequest
 (xcljb.gen-common/->Request
  nil
  65
  [(xcljb.gen-common/->Field
    "coordinate-mode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List
    "points"
    xcljb.gen.xproto-types/POINT
    nil)]))

(def
 PolySegmentRequest
 (xcljb.gen-common/->Request
  nil
  66
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List
    "segments"
    xcljb.gen.xproto-types/SEGMENT
    nil)]))

(def
 PolyRectangleRequest
 (xcljb.gen-common/->Request
  nil
  67
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List
    "rectangles"
    xcljb.gen.xproto-types/RECTANGLE
    nil)]))

(def
 PolyArcRequest
 (xcljb.gen-common/->Request
  nil
  68
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List "arcs" xcljb.gen.xproto-types/ARC nil)]))

(def
 FillPolyRequest
 (xcljb.gen-common/->Request
  nil
  69
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "shape" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "coordinate-mode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->List
    "points"
    xcljb.gen.xproto-types/POINT
    nil)]))

(def
 PolyFillRectangleRequest
 (xcljb.gen-common/->Request
  nil
  70
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List
    "rectangles"
    xcljb.gen.xproto-types/RECTANGLE
    nil)]))

(def
 PolyFillArcRequest
 (xcljb.gen-common/->Request
  nil
  71
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->List "arcs" xcljb.gen.xproto-types/ARC nil)]))

(def
 PutImageRequest
 (xcljb.gen-common/->Request
  nil
  72
  [(xcljb.gen-common/->Field "format" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "dst-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "left-pad" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->List "data" xcljb.gen.xproto-types/BYTE nil)]))

(def
 GetImageRequest
 (xcljb.gen-common/->Request
  nil
  73
  [(xcljb.gen-common/->Field "format" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "plane-mask"
    xcljb.gen.xproto-types/CARD32)]))

(def
 PolyText8Request
 (xcljb.gen-common/->Request
  nil
  74
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->List "items" xcljb.gen.xproto-types/BYTE nil)]))

(def
 PolyText16Request
 (xcljb.gen-common/->Request
  nil
  75
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->List "items" xcljb.gen.xproto-types/BYTE nil)]))

(def
 ImageText8Request
 (xcljb.gen-common/->Request
  nil
  76
  [(xcljb.gen-common/->Field "string-len" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->StringField
    "string"
    (xcljb.gen-common/->Fieldref "string-len"))]))

(def
 ImageText16Request
 (xcljb.gen-common/->Request
  nil
  77
  [(xcljb.gen-common/->Field "string-len" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "gc" xcljb.gen.xproto-types/GCONTEXT)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->List
    "string"
    xcljb.gen.xproto-types/CHAR2B
    (xcljb.gen-common/->Fieldref "string-len"))]))

(def
 CreateColormapRequest
 (xcljb.gen-common/->Request
  nil
  78
  [(xcljb.gen-common/->Field "alloc" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "mid" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "visual"
    xcljb.gen.xproto-types/VISUALID)]))

(def
 FreeColormapRequest
 (xcljb.gen-common/->Request
  nil
  79
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)]))

(def
 CopyColormapAndFreeRequest
 (xcljb.gen-common/->Request
  nil
  80
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "mid" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field
    "src-cmap"
    xcljb.gen.xproto-types/COLORMAP)]))

(def
 InstallColormapRequest
 (xcljb.gen-common/->Request
  nil
  81
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)]))

(def
 UninstallColormapRequest
 (xcljb.gen-common/->Request
  nil
  82
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)]))

(def
 ListInstalledColormapsRequest
 (xcljb.gen-common/->Request
  nil
  83
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 AllocColorRequest
 (xcljb.gen-common/->Request
  nil
  84
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "green" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 AllocNamedColorRequest
 (xcljb.gen-common/->Request
  nil
  85
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 AllocColorCellsRequest
 (xcljb.gen-common/->Request
  nil
  86
  [(xcljb.gen-common/->BoolField "contiguous" 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "colors" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "planes" xcljb.gen.xproto-types/CARD16)]))

(def
 AllocColorPlanesRequest
 (xcljb.gen-common/->Request
  nil
  87
  [(xcljb.gen-common/->BoolField "contiguous" 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "colors" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "reds" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "greens" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "blues" xcljb.gen.xproto-types/CARD16)]))

(def
 FreeColorsRequest
 (xcljb.gen-common/->Request
  nil
  88
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field
    "plane-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->List
    "pixels"
    xcljb.gen.xproto-types/CARD32
    nil)]))

(def
 StoreColorsRequest
 (xcljb.gen-common/->Request
  nil
  89
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->List
    "items"
    xcljb.gen.xproto-types/COLORITEM
    nil)]))

(def
 StoreNamedColorRequest
 (xcljb.gen-common/->Request
  nil
  90
  [(xcljb.gen-common/->Field "flags" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "pixel" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 QueryColorsRequest
 (xcljb.gen-common/->Request
  nil
  91
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->List
    "pixels"
    xcljb.gen.xproto-types/CARD32
    nil)]))

(def
 LookupColorRequest
 (xcljb.gen-common/->Request
  nil
  92
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmap" xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 CreateCursorRequest
 (xcljb.gen-common/->Request
  nil
  93
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cid" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "source" xcljb.gen.xproto-types/PIXMAP)
   (xcljb.gen-common/->Field "mask" xcljb.gen.xproto-types/PIXMAP)
   (xcljb.gen-common/->Field "fore-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "fore-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "fore-blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "back-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "back-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "back-blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/CARD16)]))

(def
 CreateGlyphCursorRequest
 (xcljb.gen-common/->Request
  nil
  94
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cid" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "source-font" xcljb.gen.xproto-types/FONT)
   (xcljb.gen-common/->Field "mask-font" xcljb.gen.xproto-types/FONT)
   (xcljb.gen-common/->Field
    "source-char"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "mask-char" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "fore-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "fore-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "fore-blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "back-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "back-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "back-blue"
    xcljb.gen.xproto-types/CARD16)]))

(def
 FreeCursorRequest
 (xcljb.gen-common/->Request
  nil
  95
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cursor" xcljb.gen.xproto-types/CURSOR)]))

(def
 RecolorCursorRequest
 (xcljb.gen-common/->Request
  nil
  96
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cursor" xcljb.gen.xproto-types/CURSOR)
   (xcljb.gen-common/->Field "fore-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "fore-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "fore-blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "back-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "back-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "back-blue"
    xcljb.gen.xproto-types/CARD16)]))

(def
 QueryBestSizeRequest
 (xcljb.gen-common/->Request
  nil
  97
  [(xcljb.gen-common/->Field "class" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 QueryExtensionRequest
 (xcljb.gen-common/->Request
  nil
  98
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def ListExtensionsRequest (xcljb.gen-common/->Request nil 99 []))

(def
 ChangeKeyboardMappingRequest
 (xcljb.gen-common/->Request
  nil
  100
  [(xcljb.gen-common/->Field
    "keycode-count"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "first-keycode"
    xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field
    "keysyms-per-keycode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->List
    "keysyms"
    xcljb.gen.xproto-types/KEYSYM
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "keycode-count")
     (xcljb.gen-common/->Fieldref "keysyms-per-keycode")))]))

(def
 GetKeyboardMappingRequest
 (xcljb.gen-common/->Request
  nil
  101
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "first-keycode"
    xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field "count" xcljb.gen.xproto-types/CARD8)]))

(def
 ChangeKeyboardControlRequest
 (xcljb.gen-common/->Request
  nil
  102
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Valueparam
    "value"
    xcljb.gen.xproto-types/CARD32)]))

(def GetKeyboardControlRequest (xcljb.gen-common/->Request nil 103 []))

(def
 BellRequest
 (xcljb.gen-common/->Request
  nil
  104
  [(xcljb.gen-common/->Field "percent" xcljb.gen.xproto-types/INT8)]))

(def
 ChangePointerControlRequest
 (xcljb.gen-common/->Request
  nil
  105
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "acceleration-numerator"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "acceleration-denominator"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "threshold" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->BoolField "do-acceleration" 1)
   (xcljb.gen-common/->BoolField "do-threshold" 1)]))

(def GetPointerControlRequest (xcljb.gen-common/->Request nil 106 []))

(def
 SetScreenSaverRequest
 (xcljb.gen-common/->Request
  nil
  107
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "timeout" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "interval" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "prefer-blanking"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "allow-exposures"
    xcljb.gen.xproto-types/CARD8)]))

(def GetScreenSaverRequest (xcljb.gen-common/->Request nil 108 []))

(def
 ChangeHostsRequest
 (xcljb.gen-common/->Request
  nil
  109
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "family" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "address-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->List
    "address"
    xcljb.gen.xproto-types/BYTE
    (xcljb.gen-common/->Fieldref "address-len"))]))

(def ListHostsRequest (xcljb.gen-common/->Request nil 110 []))

(def
 SetAccessControlRequest
 (xcljb.gen-common/->Request
  nil
  111
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)]))

(def
 SetCloseDownModeRequest
 (xcljb.gen-common/->Request
  nil
  112
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)]))

(def
 KillClientRequest
 (xcljb.gen-common/->Request
  nil
  113
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "resource"
    xcljb.gen.xproto-types/CARD32)]))

(def
 RotatePropertiesRequest
 (xcljb.gen-common/->Request
  nil
  114
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "atoms-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "delta" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->List
    "atoms"
    xcljb.gen.xproto-types/ATOM
    (xcljb.gen-common/->Fieldref "atoms-len"))]))

(def
 ForceScreenSaverRequest
 (xcljb.gen-common/->Request
  nil
  115
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/CARD8)]))

(def
 SetPointerMappingRequest
 (xcljb.gen-common/->Request
  nil
  116
  [(xcljb.gen-common/->Field "map-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->List
    "map"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Fieldref "map-len"))]))

(def GetPointerMappingRequest (xcljb.gen-common/->Request nil 117 []))

(def
 SetModifierMappingRequest
 (xcljb.gen-common/->Request
  nil
  118
  [(xcljb.gen-common/->Field
    "keycodes-per-modifier"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->List
    "keycodes"
    xcljb.gen.xproto-types/KEYCODE
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "keycodes-per-modifier")
     (xcljb.gen-common/->Value 8)))]))

(def GetModifierMappingRequest (xcljb.gen-common/->Request nil 119 []))

(def NoOperationRequest (xcljb.gen-common/->Request nil 127 []))

(def
 GetWindowAttributesReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field
    "backing-store"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "visual" xcljb.gen.xproto-types/VISUALID)
   (xcljb.gen-common/->Field "class" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "bit-gravity"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "win-gravity"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "backing-planes"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "backing-pixel"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->BoolField "save-under" 1)
   (xcljb.gen-common/->BoolField "map-is-installed" 1)
   (xcljb.gen-common/->Field "map-state" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->BoolField "override-redirect" 1)
   (xcljb.gen-common/->Field
    "colormap"
    xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->Field
    "all-event-masks"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "your-event-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "do-not-propagate-mask"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 GetGeometryReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "border-width"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 QueryTreeReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "children-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 14)
   (xcljb.gen-common/->List
    "children"
    xcljb.gen.xproto-types/WINDOW
    (xcljb.gen-common/->Fieldref "children-len"))]))

(def
 InternAtomReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "atom" xcljb.gen.xproto-types/ATOM)]))

(def
 GetAtomNameReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 GetPropertyReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "format" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "type" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field
    "bytes-after"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "value-len" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Pad 12)
   (xcljb.gen-common/->List
    "value"
    xcljb.gen.xproto-types/void
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "value-len")
     (xcljb.gen-common/->Op
      clojure.core//
      (xcljb.gen-common/->Fieldref "format")
      (xcljb.gen-common/->Value 8))))]))

(def
 ListPropertiesReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "atoms-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "atoms"
    xcljb.gen.xproto-types/ATOM
    (xcljb.gen-common/->Fieldref "atoms-len"))]))

(def
 GetSelectionOwnerReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "owner" xcljb.gen.xproto-types/WINDOW)]))

(def
 GrabPointerReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/BYTE)]))

(def
 GrabKeyboardReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/BYTE)]))

(def
 QueryPointerReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->BoolField "same-screen" 1)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "root-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "root-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "win-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "win-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "mask" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 GetMotionEventsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "events-len"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Pad 20)
   (xcljb.gen-common/->List
    "events"
    xcljb.gen.xproto-types/TIMECOORD
    (xcljb.gen-common/->Fieldref "events-len"))]))

(def
 TranslateCoordinatesReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->BoolField "same-screen" 1)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "dst-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "dst-y" xcljb.gen.xproto-types/INT16)]))

(def
 GetInputFocusReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "revert-to" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "focus" xcljb.gen.xproto-types/WINDOW)]))

(def
 QueryKeymapReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->List
    "keys"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Value 32))]))

(def
 QueryFontReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "min-bounds"
    xcljb.gen.xproto-types/CHARINFO)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->Field
    "max-bounds"
    xcljb.gen.xproto-types/CHARINFO)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->Field
    "min-char-or-byte2"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "max-char-or-byte2"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "default-char"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "properties-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "draw-direction"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "min-byte1" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "max-byte1" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->BoolField "all-chars-exist" 1)
   (xcljb.gen-common/->Field
    "font-ascent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "font-descent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "char-infos-len"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->List
    "properties"
    xcljb.gen.xproto-types/FONTPROP
    (xcljb.gen-common/->Fieldref "properties-len"))
   (xcljb.gen-common/->List
    "char-infos"
    xcljb.gen.xproto-types/CHARINFO
    (xcljb.gen-common/->Fieldref "char-infos-len"))]))

(def
 QueryTextExtentsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field
    "draw-direction"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "font-ascent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "font-descent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "overall-ascent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "overall-descent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "overall-width"
    xcljb.gen.xproto-types/INT32)
   (xcljb.gen-common/->Field
    "overall-left"
    xcljb.gen.xproto-types/INT32)
   (xcljb.gen-common/->Field
    "overall-right"
    xcljb.gen.xproto-types/INT32)]))

(def
 ListFontsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "names-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "names"
    xcljb.gen.xproto-types/STR
    (xcljb.gen-common/->Fieldref "names-len"))]))

(def
 ListFontsWithInfoReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "name-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "min-bounds"
    xcljb.gen.xproto-types/CHARINFO)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->Field
    "max-bounds"
    xcljb.gen.xproto-types/CHARINFO)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->Field
    "min-char-or-byte2"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "max-char-or-byte2"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "default-char"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "properties-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "draw-direction"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "min-byte1" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "max-byte1" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->BoolField "all-chars-exist" 1)
   (xcljb.gen-common/->Field
    "font-ascent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "font-descent"
    xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field
    "replies-hint"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->List
    "properties"
    xcljb.gen.xproto-types/FONTPROP
    (xcljb.gen-common/->Fieldref "properties-len"))
   (xcljb.gen-common/->StringField
    "name"
    (xcljb.gen-common/->Fieldref "name-len"))]))

(def
 GetFontPathReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "path-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "path"
    xcljb.gen.xproto-types/STR
    (xcljb.gen-common/->Fieldref "path-len"))]))

(def
 GetImageReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "depth" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "visual" xcljb.gen.xproto-types/VISUALID)
   (xcljb.gen-common/->Pad 20)
   (xcljb.gen-common/->List
    "data"
    xcljb.gen.xproto-types/BYTE
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "length")
     (xcljb.gen-common/->Value 4)))]))

(def
 ListInstalledColormapsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "cmaps-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "cmaps"
    xcljb.gen.xproto-types/COLORMAP
    (xcljb.gen-common/->Fieldref "cmaps-len"))]))

(def
 AllocColorReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "green" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "blue" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->Field "pixel" xcljb.gen.xproto-types/CARD32)]))

(def
 AllocNamedColorReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "pixel" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "exact-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "exact-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "exact-blue"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-red"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-blue"
    xcljb.gen.xproto-types/CARD16)]))

(def
 AllocColorCellsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "pixels-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "masks-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 20)
   (xcljb.gen-common/->List
    "pixels"
    xcljb.gen.xproto-types/CARD32
    (xcljb.gen-common/->Fieldref "pixels-len"))
   (xcljb.gen-common/->List
    "masks"
    xcljb.gen.xproto-types/CARD32
    (xcljb.gen-common/->Fieldref "masks-len"))]))

(def
 AllocColorPlanesReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "pixels-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->Field "red-mask" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "green-mask"
    xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field "blue-mask" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Pad 8)
   (xcljb.gen-common/->List
    "pixels"
    xcljb.gen.xproto-types/CARD32
    (xcljb.gen-common/->Fieldref "pixels-len"))]))

(def
 QueryColorsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "colors-len"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "colors"
    xcljb.gen.xproto-types/RGB
    (xcljb.gen-common/->Fieldref "colors-len"))]))

(def
 LookupColorReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "exact-red" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "exact-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "exact-blue"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-red"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-green"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "visual-blue"
    xcljb.gen.xproto-types/CARD16)]))

(def
 QueryBestSizeReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 QueryExtensionReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->BoolField "present" 1)
   (xcljb.gen-common/->Field
    "major-opcode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "first-event"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "first-error"
    xcljb.gen.xproto-types/CARD8)]))

(def
 ListExtensionsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "names-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 24)
   (xcljb.gen-common/->List
    "names"
    xcljb.gen.xproto-types/STR
    (xcljb.gen-common/->Fieldref "names-len"))]))

(def
 GetKeyboardMappingReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field
    "keysyms-per-keycode"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 24)
   (xcljb.gen-common/->List
    "keysyms"
    xcljb.gen.xproto-types/KEYSYM
    (xcljb.gen-common/->Fieldref "length"))]))

(def
 GetKeyboardControlReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field
    "global-auto-repeat"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "led-mask" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "key-click-percent"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bell-percent"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field
    "bell-pitch"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "bell-duration"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)
   (xcljb.gen-common/->List
    "auto-repeats"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Value 32))]))

(def
 GetPointerControlReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "acceleration-numerator"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "acceleration-denominator"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "threshold" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 18)]))

(def
 GetScreenSaverReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "timeout" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "interval" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "prefer-blanking"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "allow-exposures"
    xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 18)]))

(def
 ListHostsReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "hosts-len" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 22)
   (xcljb.gen-common/->List
    "hosts"
    xcljb.gen.xproto-types/HOST
    (xcljb.gen-common/->Fieldref "hosts-len"))]))

(def
 SetPointerMappingReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/BYTE)]))

(def
 GetPointerMappingReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "map-len" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 24)
   (xcljb.gen-common/->List
    "map"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Fieldref "map-len"))]))

(def
 SetModifierMappingReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field "status" xcljb.gen.xproto-types/BYTE)]))

(def
 GetModifierMappingReply
 (xcljb.gen-common/->Reply
  [(xcljb.gen-common/->Field
    "keycodes-per-modifier"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 24)
   (xcljb.gen-common/->List
    "keycodes"
    xcljb.gen.xproto-types/KEYCODE
    (xcljb.gen-common/->Op
     clojure.core/*
     (xcljb.gen-common/->Fieldref "keycodes-per-modifier")
     (xcljb.gen-common/->Value 8)))]))

(def
 KeyPressEvent
 (xcljb.gen-common/->Event
  nil
  "KeyPress"
  2
  false
  [(xcljb.gen-common/->Field "detail" xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "root-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "root-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->BoolField "same-screen" 1)
   (xcljb.gen-common/->Pad 1)]))

(def
 KeyReleaseEvent
 (xcljb.gen-common/->EventCopy
  nil
  "KeyRelease"
  3
  {:ext-name nil, :number 2}))

(def
 ButtonPressEvent
 (xcljb.gen-common/->Event
  nil
  "ButtonPress"
  4
  false
  [(xcljb.gen-common/->Field "detail" xcljb.gen.xproto-types/BUTTON)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "root-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "root-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->BoolField "same-screen" 1)
   (xcljb.gen-common/->Pad 1)]))

(def
 ButtonReleaseEvent
 (xcljb.gen-common/->EventCopy
  nil
  "ButtonRelease"
  5
  {:ext-name nil, :number 4}))

(def
 MotionNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "MotionNotify"
  6
  false
  [(xcljb.gen-common/->Field "detail" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "root-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "root-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->BoolField "same-screen" 1)
   (xcljb.gen-common/->Pad 1)]))

(def
 EnterNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "EnterNotify"
  7
  false
  [(xcljb.gen-common/->Field "detail" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "root" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "child" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "root-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "root-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "event-y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "same-screen-focus"
    xcljb.gen.xproto-types/BYTE)]))

(def
 LeaveNotifyEvent
 (xcljb.gen-common/->EventCopy
  nil
  "LeaveNotify"
  8
  {:ext-name nil, :number 7}))

(def
 FocusInEvent
 (xcljb.gen-common/->Event
  nil
  "FocusIn"
  9
  false
  [(xcljb.gen-common/->Field "detail" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "mode" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 3)]))

(def
 FocusOutEvent
 (xcljb.gen-common/->EventCopy
  nil
  "FocusOut"
  10
  {:ext-name nil, :number 9}))

(def
 KeymapNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "KeymapNotify"
  11
  true
  [(xcljb.gen-common/->List
    "keys"
    xcljb.gen.xproto-types/CARD8
    (xcljb.gen-common/->Value 31))]))

(def
 ExposeEvent
 (xcljb.gen-common/->Event
  nil
  "Expose"
  12
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "count" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Pad 2)]))

(def
 GraphicsExposureEvent
 (xcljb.gen-common/->Event
  nil
  "GraphicsExposure"
  13
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "minor-opcode"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "count" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "major-opcode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 3)]))

(def
 NoExposureEvent
 (xcljb.gen-common/->Event
  nil
  "NoExposure"
  14
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field
    "drawable"
    xcljb.gen.xproto-types/DRAWABLE)
   (xcljb.gen-common/->Field
    "minor-opcode"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "major-opcode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)]))

(def
 VisibilityNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "VisibilityNotify"
  15
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 3)]))

(def
 CreateNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "CreateNotify"
  16
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "border-width"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->BoolField "override-redirect" 1)
   (xcljb.gen-common/->Pad 1)]))

(def
 DestroyNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "DestroyNotify"
  17
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 UnmapNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "UnmapNotify"
  18
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->BoolField "from-configure" 1)
   (xcljb.gen-common/->Pad 3)]))

(def
 MapNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "MapNotify"
  19
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->BoolField "override-redirect" 1)
   (xcljb.gen-common/->Pad 3)]))

(def
 MapRequestEvent
 (xcljb.gen-common/->Event
  nil
  "MapRequest"
  20
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)]))

(def
 ReparentNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "ReparentNotify"
  21
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->BoolField "override-redirect" 1)
   (xcljb.gen-common/->Pad 3)]))

(def
 ConfigureNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "ConfigureNotify"
  22
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "above-sibling"
    xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "border-width"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->BoolField "override-redirect" 1)
   (xcljb.gen-common/->Pad 1)]))

(def
 ConfigureRequestEvent
 (xcljb.gen-common/->Event
  nil
  "ConfigureRequest"
  23
  false
  [(xcljb.gen-common/->Field "stack-mode" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field "parent" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "sibling" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "border-width"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "value-mask"
    xcljb.gen.xproto-types/CARD16)]))

(def
 GravityNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "GravityNotify"
  24
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "x" xcljb.gen.xproto-types/INT16)
   (xcljb.gen-common/->Field "y" xcljb.gen.xproto-types/INT16)]))

(def
 ResizeRequestEvent
 (xcljb.gen-common/->Event
  nil
  "ResizeRequest"
  25
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "width" xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field "height" xcljb.gen.xproto-types/CARD16)]))

(def
 CirculateNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "CirculateNotify"
  26
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "event" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Pad 4)
   (xcljb.gen-common/->Field "place" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 3)]))

(def
 CirculateRequestEvent
 (xcljb.gen-common/->EventCopy
  nil
  "CirculateRequest"
  27
  {:ext-name nil, :number 26}))

(def
 PropertyNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "PropertyNotify"
  28
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "atom" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 3)]))

(def
 SelectionClearEvent
 (xcljb.gen-common/->Event
  nil
  "SelectionClear"
  29
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "owner" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)]))

(def
 SelectionRequestEvent
 (xcljb.gen-common/->Event
  nil
  "SelectionRequest"
  30
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "owner" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "requestor" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "target" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)]))

(def
 SelectionNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "SelectionNotify"
  31
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "time" xcljb.gen.xproto-types/TIMESTAMP)
   (xcljb.gen-common/->Field "requestor" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "selection" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "target" xcljb.gen.xproto-types/ATOM)
   (xcljb.gen-common/->Field "property" xcljb.gen.xproto-types/ATOM)]))

(def
 ColormapNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "ColormapNotify"
  32
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field
    "colormap"
    xcljb.gen.xproto-types/COLORMAP)
   (xcljb.gen-common/->BoolField "new" 1)
   (xcljb.gen-common/->Field "state" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Pad 2)]))

(def
 MappingNotifyEvent
 (xcljb.gen-common/->Event
  nil
  "MappingNotify"
  34
  false
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "request" xcljb.gen.xproto-types/BYTE)
   (xcljb.gen-common/->Field
    "first-keycode"
    xcljb.gen.xproto-types/KEYCODE)
   (xcljb.gen-common/->Field "count" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)]))

(def
 RequestError
 (xcljb.gen-common/->Error'
  nil
  "Request"
  1
  [(xcljb.gen-common/->Field "bad-value" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "minor-opcode"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "major-opcode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)]))

(def
 ValueError
 (xcljb.gen-common/->Error'
  nil
  "Value"
  2
  [(xcljb.gen-common/->Field "bad-value" xcljb.gen.xproto-types/CARD32)
   (xcljb.gen-common/->Field
    "minor-opcode"
    xcljb.gen.xproto-types/CARD16)
   (xcljb.gen-common/->Field
    "major-opcode"
    xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Pad 1)]))

(def
 WindowError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Window"
  3
  {:ext-name nil, :number 2}))

(def
 PixmapError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Pixmap"
  4
  {:ext-name nil, :number 2}))

(def
 AtomError
 (xcljb.gen-common/->ErrorCopy nil "Atom" 5 {:ext-name nil, :number 2}))

(def
 CursorError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Cursor"
  6
  {:ext-name nil, :number 2}))

(def
 FontError
 (xcljb.gen-common/->ErrorCopy nil "Font" 7 {:ext-name nil, :number 2}))

(def
 MatchError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Match"
  8
  {:ext-name nil, :number 1}))

(def
 DrawableError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Drawable"
  9
  {:ext-name nil, :number 2}))

(def
 AccessError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Access"
  10
  {:ext-name nil, :number 1}))

(def
 AllocError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Alloc"
  11
  {:ext-name nil, :number 1}))

(def
 ColormapError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Colormap"
  12
  {:ext-name nil, :number 2}))

(def
 GContextError
 (xcljb.gen-common/->ErrorCopy
  nil
  "GContext"
  13
  {:ext-name nil, :number 2}))

(def
 IDChoiceError
 (xcljb.gen-common/->ErrorCopy
  nil
  "IDChoice"
  14
  {:ext-name nil, :number 2}))

(def
 NameError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Name"
  15
  {:ext-name nil, :number 1}))

(def
 LengthError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Length"
  16
  {:ext-name nil, :number 1}))

(def
 ImplementationError
 (xcljb.gen-common/->ErrorCopy
  nil
  "Implementation"
  17
  {:ext-name nil, :number 1}))

;;; Manually written.

(def
 QueryTextExtentsRequest
 (xcljb.gen-common/->Request
  nil
  48
  [(clojure.core/reify
    xcljb.gen-common/Measurable
    (sizeof [_ _] 1)
    xcljb.gen-common/Serializable
    (->frame [_ _] :ubyte)
    (->value
     [_ context]
     (if
      (clojure.core/odd? (clojure.core/count (:string context)))
      1
      0)))
   (xcljb.gen-common/->Field "font" xcljb.gen.xproto-types/FONTABLE)
   (xcljb.gen-common/->List
    "string"
    xcljb.gen.xproto-types/CHAR2B
    nil)]))

(def
 ConfigureWindowRequest
 (xcljb.gen-common/->Request
  nil
  12
  [(xcljb.gen-common/->Pad 1)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (clojure.core/reify
    xcljb.gen-common/Measurable
    (sizeof
     [_ vp]
     (clojure.core/+ 4 (clojure.core/* (clojure.core/count vp) 4)))
    xcljb.gen-common/Serializable
    (->frame
     [_ context]
     (clojure.core/let
      [vp (:value context)]
      [:uint16
       :ubyte
       :ubyte
       (clojure.core/repeat (clojure.core/count vp) :uint32)]))
    (->value
     [_ context]
     (clojure.core/let
      [vp (:value context)]
      [(clojure.core/reduce
        clojure.core/bit-or
        0
        (clojure.core/keys vp))
       0
       0
       (clojure.core/->>
        vp
        (clojure.core/sort-by clojure.core/key)
        (clojure.core/map clojure.core/second))])))]))

(def
 ClientMessageEvent
 (xcljb.gen-common/->Event
  nil
  "ClientMessage"
  33
  false
  [(xcljb.gen-common/->Field "format" xcljb.gen.xproto-types/CARD8)
   (xcljb.gen-common/->Field "window" xcljb.gen.xproto-types/WINDOW)
   (xcljb.gen-common/->Field "ATOM" xcljb.gen.xproto-types/ATOM)
   (clojure.core/reify
    xcljb.gen-common/Measurable
    (sizeof [_ _] 160)
    xcljb.gen-common/Deserializable
    (deserialize
     [_ buf context]
     (xcljb.gen-common/deserialize
      (xcljb.gen-common/->List
       "data"
       (clojure.core/case
        (:format context)
        8
        xcljb.gen.xproto-types/CARD8
        16
        xcljb.gen.xproto-types/CARD16
        32
        xcljb.gen.xproto-types/CARD32)
       (xcljb.gen-common/->Value
        (clojure.core/case (:format context) 8 20 16 10 32 5)))
      buf
      context)))]))
